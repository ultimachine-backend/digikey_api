# coding: utf-8

"""
    ProductSearch Api

    ProductSearch Api  # noqa: E501

    OpenAPI spec version: v4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class PricingOptionsForQuantityResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'requested_product': 'str',
        'requested_quantity': 'int',
        'product_url': 'str',
        'manufacturer_part_number': 'str',
        'manufacturer': 'Manufacturer',
        'description': 'Description',
        'settings_used': 'PriceSettingsUsed',
        'my_pricing_options': 'list[PricingOptionsForQuantity]',
        'standard_pricing_options': 'list[PricingOptionsForQuantity]'
    }

    attribute_map = {
        'requested_product': 'RequestedProduct',
        'requested_quantity': 'RequestedQuantity',
        'product_url': 'ProductUrl',
        'manufacturer_part_number': 'ManufacturerPartNumber',
        'manufacturer': 'Manufacturer',
        'description': 'Description',
        'settings_used': 'SettingsUsed',
        'my_pricing_options': 'MyPricingOptions',
        'standard_pricing_options': 'StandardPricingOptions'
    }

    def __init__(self, requested_product=None, requested_quantity=None, product_url=None, manufacturer_part_number=None, manufacturer=None, description=None, settings_used=None, my_pricing_options=None, standard_pricing_options=None):  # noqa: E501
        """PricingOptionsForQuantityResponse - a model defined in Swagger"""  # noqa: E501

        self._requested_product = None
        self._requested_quantity = None
        self._product_url = None
        self._manufacturer_part_number = None
        self._manufacturer = None
        self._description = None
        self._settings_used = None
        self._my_pricing_options = None
        self._standard_pricing_options = None
        self.discriminator = None

        if requested_product is not None:
            self.requested_product = requested_product
        if requested_quantity is not None:
            self.requested_quantity = requested_quantity
        if product_url is not None:
            self.product_url = product_url
        if manufacturer_part_number is not None:
            self.manufacturer_part_number = manufacturer_part_number
        if manufacturer is not None:
            self.manufacturer = manufacturer
        if description is not None:
            self.description = description
        if settings_used is not None:
            self.settings_used = settings_used
        if my_pricing_options is not None:
            self.my_pricing_options = my_pricing_options
        if standard_pricing_options is not None:
            self.standard_pricing_options = standard_pricing_options

    @property
    def requested_product(self):
        """Gets the requested_product of this PricingOptionsForQuantityResponse.  # noqa: E501

        The requested product used for the API call.  # noqa: E501

        :return: The requested_product of this PricingOptionsForQuantityResponse.  # noqa: E501
        :rtype: str
        """
        return self._requested_product

    @requested_product.setter
    def requested_product(self, requested_product):
        """Sets the requested_product of this PricingOptionsForQuantityResponse.

        The requested product used for the API call.  # noqa: E501

        :param requested_product: The requested_product of this PricingOptionsForQuantityResponse.  # noqa: E501
        :type: str
        """

        self._requested_product = requested_product

    @property
    def requested_quantity(self):
        """Gets the requested_quantity of this PricingOptionsForQuantityResponse.  # noqa: E501

        The RequestedQuantity we used for the API call. Note we may have lowered or increased your requested amount if it is outside allowed quantities or to provide you a better deal.  # noqa: E501

        :return: The requested_quantity of this PricingOptionsForQuantityResponse.  # noqa: E501
        :rtype: int
        """
        return self._requested_quantity

    @requested_quantity.setter
    def requested_quantity(self, requested_quantity):
        """Sets the requested_quantity of this PricingOptionsForQuantityResponse.

        The RequestedQuantity we used for the API call. Note we may have lowered or increased your requested amount if it is outside allowed quantities or to provide you a better deal.  # noqa: E501

        :param requested_quantity: The requested_quantity of this PricingOptionsForQuantityResponse.  # noqa: E501
        :type: int
        """

        self._requested_quantity = requested_quantity

    @property
    def product_url(self):
        """Gets the product_url of this PricingOptionsForQuantityResponse.  # noqa: E501

        Full URL of the DigiKey page to purchase the product. This is based on your provided Locale values.  # noqa: E501

        :return: The product_url of this PricingOptionsForQuantityResponse.  # noqa: E501
        :rtype: str
        """
        return self._product_url

    @product_url.setter
    def product_url(self, product_url):
        """Sets the product_url of this PricingOptionsForQuantityResponse.

        Full URL of the DigiKey page to purchase the product. This is based on your provided Locale values.  # noqa: E501

        :param product_url: The product_url of this PricingOptionsForQuantityResponse.  # noqa: E501
        :type: str
        """

        self._product_url = product_url

    @property
    def manufacturer_part_number(self):
        """Gets the manufacturer_part_number of this PricingOptionsForQuantityResponse.  # noqa: E501

        The manufacturer part number. Note that some manufacturer part numbers may be used by multiple manufacturers for different parts.  # noqa: E501

        :return: The manufacturer_part_number of this PricingOptionsForQuantityResponse.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_part_number

    @manufacturer_part_number.setter
    def manufacturer_part_number(self, manufacturer_part_number):
        """Sets the manufacturer_part_number of this PricingOptionsForQuantityResponse.

        The manufacturer part number. Note that some manufacturer part numbers may be used by multiple manufacturers for different parts.  # noqa: E501

        :param manufacturer_part_number: The manufacturer_part_number of this PricingOptionsForQuantityResponse.  # noqa: E501
        :type: str
        """

        self._manufacturer_part_number = manufacturer_part_number

    @property
    def manufacturer(self):
        """Gets the manufacturer of this PricingOptionsForQuantityResponse.  # noqa: E501


        :return: The manufacturer of this PricingOptionsForQuantityResponse.  # noqa: E501
        :rtype: Manufacturer
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this PricingOptionsForQuantityResponse.


        :param manufacturer: The manufacturer of this PricingOptionsForQuantityResponse.  # noqa: E501
        :type: Manufacturer
        """

        self._manufacturer = manufacturer

    @property
    def description(self):
        """Gets the description of this PricingOptionsForQuantityResponse.  # noqa: E501


        :return: The description of this PricingOptionsForQuantityResponse.  # noqa: E501
        :rtype: Description
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PricingOptionsForQuantityResponse.


        :param description: The description of this PricingOptionsForQuantityResponse.  # noqa: E501
        :type: Description
        """

        self._description = description

    @property
    def settings_used(self):
        """Gets the settings_used of this PricingOptionsForQuantityResponse.  # noqa: E501


        :return: The settings_used of this PricingOptionsForQuantityResponse.  # noqa: E501
        :rtype: PriceSettingsUsed
        """
        return self._settings_used

    @settings_used.setter
    def settings_used(self, settings_used):
        """Sets the settings_used of this PricingOptionsForQuantityResponse.


        :param settings_used: The settings_used of this PricingOptionsForQuantityResponse.  # noqa: E501
        :type: PriceSettingsUsed
        """

        self._settings_used = settings_used

    @property
    def my_pricing_options(self):
        """Gets the my_pricing_options of this PricingOptionsForQuantityResponse.  # noqa: E501

        MyPricingOptions  # noqa: E501

        :return: The my_pricing_options of this PricingOptionsForQuantityResponse.  # noqa: E501
        :rtype: list[PricingOptionsForQuantity]
        """
        return self._my_pricing_options

    @my_pricing_options.setter
    def my_pricing_options(self, my_pricing_options):
        """Sets the my_pricing_options of this PricingOptionsForQuantityResponse.

        MyPricingOptions  # noqa: E501

        :param my_pricing_options: The my_pricing_options of this PricingOptionsForQuantityResponse.  # noqa: E501
        :type: list[PricingOptionsForQuantity]
        """

        self._my_pricing_options = my_pricing_options

    @property
    def standard_pricing_options(self):
        """Gets the standard_pricing_options of this PricingOptionsForQuantityResponse.  # noqa: E501

        StandardPricingOptions  # noqa: E501

        :return: The standard_pricing_options of this PricingOptionsForQuantityResponse.  # noqa: E501
        :rtype: list[PricingOptionsForQuantity]
        """
        return self._standard_pricing_options

    @standard_pricing_options.setter
    def standard_pricing_options(self, standard_pricing_options):
        """Sets the standard_pricing_options of this PricingOptionsForQuantityResponse.

        StandardPricingOptions  # noqa: E501

        :param standard_pricing_options: The standard_pricing_options of this PricingOptionsForQuantityResponse.  # noqa: E501
        :type: list[PricingOptionsForQuantity]
        """

        self._standard_pricing_options = standard_pricing_options

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PricingOptionsForQuantityResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PricingOptionsForQuantityResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
